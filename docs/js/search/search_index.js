var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.318,1,1.318]],["body/controllers/AppController.html",[0,1.19,1,1.19,2,1.107,3,0.311,4,0.311,5,0.251,6,1.107,7,0.311,8,1.19,9,2.28,10,2.746,11,1.741,12,2.221,13,1.741,14,1.411,15,1.763,16,3.114,17,0.066,18,2.746,19,1.405,20,1.411,21,1.669,22,1.669,23,0.832,24,1.405,25,2.221,26,1.669,27,2.502,28,1.411,29,1.927,30,2.221,31,1.411,32,2.415,33,1.411,34,2.221,35,1.411,36,1.411,37,1.622,38,2.221,39,1.411,40,0.792,41,0.637,42,1.084,43,1.19,44,0.452,45,1.741,46,1.411,47,1.411,48,0.377,49,1.045,50,1.107,51,0.637,52,1.411,53,1.045,54,1.107,55,1.045,56,1.107,57,0.311,58,0.452,59,0.906,60,2.153,61,2.153,62,1.411,63,0.906,64,1.107,65,2.221,66,1.411,67,1.763,68,1.411,69,1.411,70,2.221,71,1.411,72,2.221,73,1.411,74,2.221,75,1.411,76,2.221,77,1.411,78,0.906,79,0.906,80,1.411,81,1.411,82,1.411,83,1.669,84,0.452,85,1.411,86,0.756,87,1.411,88,1.411,89,1.411,90,1.411,91,2.221,92,1.411,93,0.03,94,0.03]],["title/modules/AppModule.html",[95,1.579,96,1.318]],["body/modules/AppModule.html",[1,1.914,2,2.421,3,0.483,4,0.483,5,0.39,17,0.066,40,0.959,48,0.586,49,1.612,50,1.72,53,1.612,54,1.72,55,1.612,56,1.72,57,0.483,58,0.702,93,0.041,94,0.041,95,1.982,96,2.541,97,1.408,98,1.654,99,1.72,100,1.72,101,1.911,102,1.356,103,2.421,104,1.72,105,1.72,106,2.193,107,3.087,108,2.193,109,1.408,110,2.193,111,2.193]],["title/injectables/AppService.html",[49,0.936,112,0.343]],["body/injectables/AppService.html",[3,0.51,4,0.51,5,0.412,7,0.51,8,1.718,9,2.31,15,2.361,17,0.066,19,1.659,21,1.718,22,1.718,23,0.857,24,1.446,26,1.718,27,2.548,40,0.81,41,1.659,42,0.741,44,0.741,48,0.619,49,1.22,57,0.51,58,0.741,59,1.487,83,1.718,84,1.026,93,0.043,94,0.043,102,1.27,109,1.487,112,0.447,113,0.881,114,1.816,115,2.514,116,3.969,117,1.816,118,2.316,119,2.514,120,2.316,121,2.316,122,1.816,123,1.816,124,1.816]],["title/injectables/AuditService.html",[101,1.109,112,0.343]],["body/injectables/AuditService.html",[3,0.758,4,0.758,5,0.613,17,0.063,40,0.758,48,0.92,57,0.758,58,1.102,93,0.056,94,0.056,101,1.87,112,0.578,113,1.31,125,2.699]],["title/injectables/JsTLService.html",[53,0.936,112,0.343]],["body/injectables/JsTLService.html",[3,0.462,4,0.462,5,0.374,7,0.462,13,2.734,17,0.067,19,1.573,29,1.604,40,0.462,42,0.672,48,0.561,53,1.139,57,0.462,58,0.672,63,1.921,78,2.239,83,2.037,84,0.958,93,0.04,94,0.04,112,0.417,113,0.799,126,1.646,127,1.604,128,3.487,129,3.487,130,2.239,131,2.099,132,2.099,133,2.099,134,2.992,135,4.177,136,2.099,137,2.099,138,2.099,139,2.099,140,2.347,141,2.099,142,2.099,143,2.099,144,2.099,145,2.992,146,2.099,147,2.099,148,2.992,149,2.099,150,1.646,151,2.099,152,2.099,153,2.099]],["title/injectables/PrismaService.html",[102,0.787,112,0.343]],["body/injectables/PrismaService.html",[3,0.485,4,0.485,5,0.392,7,0.485,8,1.659,9,2.335,17,0.066,19,1.615,21,1.18,22,1.18,23,0.589,24,0.994,26,1.659,40,0.682,44,0.705,48,0.589,57,0.485,58,0.705,60,2.807,61,2.807,64,2.428,78,1.414,93,0.042,94,0.042,102,0.991,112,0.432,113,0.838,127,1.659,130,1.414,154,1.727,155,3.096,156,3.58,157,3.883,158,3.096,159,4.243,160,3.096,161,3.883,162,2.202,163,2.202,164,2.202,165,2.428,166,3.096,167,2.202,168,2.202,169,2.202,170,2.202,171,2.202,172,2.202,173,2.202,174,2.202,175,2.202]],["title/interfaces/RenderDto.html",[37,1.109,176,1.109]],["body/interfaces/RenderDto.html",[3,0.633,4,0.633,5,0.511,7,0.633,17,0.065,23,0.989,29,1.984,32,2.779,37,1.67,40,0.633,42,0.919,43,2.196,44,0.919,51,1.296,57,0.815,67,1.844,84,1.434,86,1.539,93,0.05,94,0.05,127,1.984,176,1.67,177,1.844,178,1.844,179,2.631]],["title/interfaces/RenderResponse.html",[51,1.109,176,1.109]],["body/interfaces/RenderResponse.html",[3,0.569,4,0.569,5,0.46,7,0.569,17,0.065,23,1.157,24,1.558,29,2.387,32,1.658,37,1.165,40,0.569,42,1.329,43,2.476,44,0.827,51,1.558,57,0.76,67,2.666,84,1.385,86,2.225,93,0.046,94,0.046,127,1.851,176,1.558,177,1.658,178,1.658,179,1.658]],["title/injectables/TemplateService.html",[55,0.936,112,0.343]],["body/injectables/TemplateService.html",[3,0.325,4,0.325,5,0.263,7,0.325,8,1.233,9,2.389,11,2.217,15,1.815,17,0.066,19,1.653,21,1.964,22,1.964,23,1.111,24,1.653,26,1.854,27,2.669,40,0.623,41,1.275,42,1.022,44,0.473,48,0.395,55,0.876,57,0.325,58,0.473,59,0.948,63,1.478,79,1.478,83,1.854,84,1.107,93,0.031,94,0.031,102,1.022,109,0.948,112,0.321,113,0.562,115,1.805,117,1.158,119,1.805,122,1.158,123,1.158,124,1.158,179,1.478,180,1.158,181,2.301,182,1.477,183,1.477,184,1.477,185,3.958,186,1.477,187,1.477,188,1.477,189,2.827,190,2.301,191,3.192,192,1.477,193,3.192,194,2.301,195,1.477,196,1.477,197,2.827,198,2.827,199,2.827,200,1.477,201,2.827,202,1.477,203,1.477,204,1.477,205,1.477]],["title/coverage.html",[206,2.619]],["body/coverage.html",[0,1.418,1,1.418,5,0.471,6,2.075,17,0.064,23,0.707,37,1.194,49,1.007,51,1.194,53,1.007,55,1.007,93,0.047,94,0.047,101,1.194,102,0.847,112,0.609,114,2.075,125,2.075,126,2.075,154,2.075,165,2.075,176,1.583,178,2.253,180,2.075,206,2.075,207,2.647,208,2.647,209,2.647,210,4.702,211,2.647,212,3.938,213,3.51,214,2.647,215,2.647,216,2.075,217,2.075,218,2.075,219,2.647,220,2.647,221,2.647]],["title/dependencies.html",[98,1.582,222,2.061]],["body/dependencies.html",[17,0.066,41,1.354,44,0.96,48,0.802,93,0.051,94,0.051,98,1.608,223,4.182,224,3.001,225,3.001,226,3.807,227,3.001,228,3.001,229,3.807,230,2.353,231,3.001,232,3.001,233,3.001,234,3.001,235,3.001,236,3.001,237,3.001,238,3.001,239,3.001,240,3.001,241,3.001,242,3.001]],["title/miscellaneous/functions.html",[243,1.616,244,2.316]],["body/miscellaneous/functions.html",[7,0.799,17,0.057,93,0.057,94,0.057,216,2.845,218,3.566,243,2.845,244,2.845,245,3.628]],["title/index.html",[7,0.454,246,2.061,247,2.061]],["body/index.html",[17,0.066,23,0.538,41,1.31,42,0.929,43,1.079,45,1.579,79,1.864,84,0.929,86,1.556,93,0.039,94,0.039,130,1.864,140,2.671,150,2.277,217,1.579,230,1.579,248,2.013,249,2.013,250,2.013,251,2.013,252,2.013,253,2.013,254,2.013,255,2.013,256,2.013,257,2.013,258,2.013,259,2.013,260,2.013,261,2.013,262,2.013,263,2.904,264,2.904,265,2.013,266,2.013,267,2.013,268,2.013,269,2.904,270,2.013,271,2.013,272,2.013,273,2.013,274,2.013,275,2.013,276,3.406,277,3.406,278,3.406,279,2.013,280,2.013,281,3.406,282,2.013,283,1.579,284,2.013,285,1.579,286,2.013,287,2.013,288,2.013,289,2.013,290,2.013,291,2.904,292,2.013,293,2.904,294,2.013,295,2.013,296,2.013,297,2.013,298,2.013,299,2.013,300,2.013,301,2.013,302,2.013,303,2.013,304,2.013,305,2.013,306,2.904,307,2.013,308,2.013,309,2.013,310,2.013,311,2.013,312,2.013,313,2.013,314,2.013]],["title/modules.html",[97,2.145]],["body/modules.html",[17,0.058,93,0.058,94,0.058,96,1.971,97,2.361,315,3.677,316,3.677,317,3.677,318,3.677]],["title/overview.html",[319,2.619]],["body/overview.html",[0,1.523,17,0.062,49,1.551,53,1.551,55,1.551,93,0.049,94,0.049,95,1.825,96,2.61,98,1.971,99,2.229,100,2.229,101,1.839,102,1.305,103,2.884,104,2.229,105,2.229,113,1.082,177,1.825,283,2.884,285,2.229,319,2.229,320,2.842]]],"invertedIndex":[["",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuditService.html":{},"injectables/JsTLService.html":{},"injectables/PrismaService.html":{},"interfaces/RenderDto.html":{},"interfaces/RenderResponse.html":{},"injectables/TemplateService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":210,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":235,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":213,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":214,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":212,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":211,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":215,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":219,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":283,"title":{},"body":{"index.html":{},"overview.html":{}}}],["1).trim",{"_index":142,"title":{},"body":{"injectables/JsTLService.html":{}}}],["1.0.0",{"_index":232,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":285,"title":{},"body":{"index.html":{},"overview.html":{}}}],["3.0.2",{"_index":237,"title":{},"body":{"dependencies.html":{}}}],["3.5.0",{"_index":229,"title":{},"body":{"dependencies.html":{}}}],["4.1.6",{"_index":242,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":320,"title":{},"body":{"overview.html":{}}}],["5.1.5",{"_index":228,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":239,"title":{},"body":{"dependencies.html":{}}}],["8.0.0",{"_index":223,"title":{},"body":{"dependencies.html":{}}}],["abbreviations",{"_index":268,"title":{},"body":{"index.html":{}}}],["addtemplate",{"_index":10,"title":{},"body":{"controllers/AppController.html":{}}}],["addtemplate(templatedata",{"_index":14,"title":{},"body":{"controllers/AppController.html":{}}}],["allowed",{"_index":82,"title":{},"body":{"controllers/AppController.html":{}}}],["api",{"_index":290,"title":{},"body":{"index.html":{}}}],["apis",{"_index":250,"title":{},"body":{"index.html":{}}}],["app",{"_index":163,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.close",{"_index":175,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.controller",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":50,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appmodule",{"_index":96,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":49,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"injectables/TemplateService.html":{}}}],["audit/audit.service",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["auditservice",{"_index":101,"title":{"injectables/AuditService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuditService.html":{},"coverage.html":{},"overview.html":{}}}],["await",{"_index":64,"title":{},"body":{"controllers/AppController.html":{},"injectables/PrismaService.html":{}}}],["bigint",{"_index":231,"title":{},"body":{"dependencies.html":{}}}],["body",{"_index":45,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["bootstrap",{"_index":218,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["break",{"_index":77,"title":{},"body":{"controllers/AppController.html":{}}}],["browse",{"_index":318,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":315,"title":{},"body":{"modules.html":{}}}],["case",{"_index":70,"title":{},"body":{"controllers/AppController.html":{}}}],["class",{"_index":58,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuditService.html":{},"injectables/JsTLService.html":{},"injectables/PrismaService.html":{},"injectables/TemplateService.html":{}}}],["cloudbuild.googleapis.com",{"_index":286,"title":{},"body":{"index.html":{}}}],["cloudfunctions.googleapis.com",{"_index":284,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["coming",{"_index":266,"title":{},"body":{"index.html":{}}}],["commenting",{"_index":292,"title":{},"body":{"index.html":{}}}],["compose",{"_index":309,"title":{},"body":{"index.html":{}}}],["config",{"_index":256,"title":{},"body":{"index.html":{}}}],["connected",{"_index":171,"title":{},"body":{"injectables/PrismaService.html":{}}}],["const",{"_index":63,"title":{},"body":{"controllers/AppController.html":{},"injectables/JsTLService.html":{},"injectables/TemplateService.html":{}}}],["constructor",{"_index":59,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/TemplateService.html":{}}}],["constructor(prisma",{"_index":117,"title":{},"body":{"injectables/AppService.html":{},"injectables/TemplateService.html":{}}}],["constructor(private",{"_index":122,"title":{},"body":{"injectables/AppService.html":{},"injectables/TemplateService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"coverage.html":{},"overview.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["coverage",{"_index":206,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createtemplate",{"_index":115,"title":{},"body":{"injectables/AppService.html":{},"injectables/TemplateService.html":{}}}],["createtemplate(data",{"_index":119,"title":{},"body":{"injectables/AppService.html":{},"injectables/TemplateService.html":{}}}],["crud",{"_index":251,"title":{},"body":{"index.html":{}}}],["cursor",{"_index":199,"title":{},"body":{"injectables/TemplateService.html":{}}}],["d",{"_index":311,"title":{},"body":{"index.html":{}}}],["data",{"_index":84,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/JsTLService.html":{},"interfaces/RenderDto.html":{},"interfaces/RenderResponse.html":{},"injectables/TemplateService.html":{},"index.html":{}}}],["data.field1",{"_index":297,"title":{},"body":{"index.html":{}}}],["data.field2",{"_index":299,"title":{},"body":{"index.html":{}}}],["data.username",{"_index":280,"title":{},"body":{"index.html":{}}}],["database",{"_index":305,"title":{},"body":{"index.html":{}}}],["decorators",{"_index":16,"title":{},"body":{"controllers/AppController.html":{}}}],["default",{"_index":78,"title":{},"body":{"controllers/AppController.html":{},"injectables/JsTLService.html":{},"injectables/PrismaService.html":{}}}],["defined",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/JsTLService.html":{},"injectables/PrismaService.html":{},"injectables/TemplateService.html":{}}}],["delete",{"_index":46,"title":{},"body":{"controllers/AppController.html":{}}}],["delete('/:id",{"_index":30,"title":{},"body":{"controllers/AppController.html":{}}}],["deletetemplate",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"injectables/TemplateService.html":{}}}],["deletetemplate(@param('id",{"_index":89,"title":{},"body":{"controllers/AppController.html":{}}}],["deletetemplate(id",{"_index":28,"title":{},"body":{"controllers/AppController.html":{}}}],["deletetemplate(where",{"_index":184,"title":{},"body":{"injectables/TemplateService.html":{}}}],["dependencies",{"_index":98,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":248,"title":{},"body":{"index.html":{}}}],["dev",{"_index":277,"title":{},"body":{"index.html":{}}}],["docker",{"_index":308,"title":{},"body":{"index.html":{}}}],["docs",{"_index":291,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":207,"title":{},"body":{"coverage.html":{}}}],["done",{"_index":314,"title":{},"body":{"index.html":{}}}],["dto/render",{"_index":52,"title":{},"body":{"controllers/AppController.html":{}}}],["enableshutdownhooks",{"_index":158,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":160,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enum",{"_index":282,"title":{},"body":{"index.html":{}}}],["existing",{"_index":174,"title":{},"body":{"injectables/PrismaService.html":{}}}],["export",{"_index":57,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuditService.html":{},"injectables/JsTLService.html":{},"injectables/PrismaService.html":{},"interfaces/RenderDto.html":{},"interfaces/RenderResponse.html":{},"injectables/TemplateService.html":{}}}],["express",{"_index":226,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":155,"title":{},"body":{"injectables/PrismaService.html":{}}}],["f1",{"_index":294,"title":{},"body":{"index.html":{}}}],["f2",{"_index":295,"title":{},"body":{"index.html":{}}}],["fallback",{"_index":135,"title":{},"body":{"injectables/JsTLService.html":{}}}],["feel",{"_index":253,"title":{},"body":{"index.html":{}}}],["field1",{"_index":293,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuditService.html":{},"injectables/JsTLService.html":{},"injectables/PrismaService.html":{},"interfaces/RenderDto.html":{},"interfaces/RenderResponse.html":{},"injectables/TemplateService.html":{},"coverage.html":{}}}],["free",{"_index":254,"title":{},"body":{"index.html":{}}}],["function",{"_index":217,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["functions",{"_index":244,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":137,"title":{},"body":{"injectables/JsTLService.html":{}}}],["generating",{"_index":313,"title":{},"body":{"index.html":{}}}],["get('/:id",{"_index":34,"title":{},"body":{"controllers/AppController.html":{}}}],["getalltemplates",{"_index":116,"title":{},"body":{"injectables/AppService.html":{}}}],["getobjpath",{"_index":128,"title":{},"body":{"injectables/JsTLService.html":{}}}],["gettemplate",{"_index":12,"title":{},"body":{"controllers/AppController.html":{}}}],["gettemplate(@param('id",{"_index":92,"title":{},"body":{"controllers/AppController.html":{}}}],["gettemplate(id",{"_index":33,"title":{},"body":{"controllers/AppController.html":{}}}],["getting",{"_index":246,"title":{"index.html":{}},"body":{}}],["gql",{"_index":306,"title":{},"body":{"index.html":{}}}],["hello",{"_index":301,"title":{},"body":{"index.html":{}}}],["id",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"interfaces/RenderDto.html":{},"interfaces/RenderResponse.html":{}}}],["identifier",{"_index":208,"title":{},"body":{"coverage.html":{}}}],["implemented",{"_index":73,"title":{},"body":{"controllers/AppController.html":{}}}],["implements",{"_index":168,"title":{},"body":{"injectables/PrismaService.html":{}}}],["import",{"_index":40,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuditService.html":{},"injectables/JsTLService.html":{},"injectables/PrismaService.html":{},"interfaces/RenderDto.html":{},"interfaces/RenderResponse.html":{},"injectables/TemplateService.html":{}}}],["imports",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/JsTLService.html":{},"injectables/PrismaService.html":{},"interfaces/RenderDto.html":{},"interfaces/RenderResponse.html":{},"injectables/TemplateService.html":{},"miscellaneous/functions.html":{}}}],["inestapplication",{"_index":161,"title":{},"body":{"injectables/PrismaService.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuditService.html":{},"injectables/JsTLService.html":{},"injectables/PrismaService.html":{},"interfaces/RenderDto.html":{},"interfaces/RenderResponse.html":{},"injectables/TemplateService.html":{}}}],["injectable",{"_index":112,"title":{"injectables/AppService.html":{},"injectables/AuditService.html":{},"injectables/JsTLService.html":{},"injectables/PrismaService.html":{},"injectables/TemplateService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuditService.html":{},"injectables/JsTLService.html":{},"injectables/PrismaService.html":{},"injectables/TemplateService.html":{},"coverage.html":{}}}],["injectables",{"_index":113,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuditService.html":{},"injectables/JsTLService.html":{},"injectables/PrismaService.html":{},"injectables/TemplateService.html":{},"overview.html":{}}}],["installation",{"_index":258,"title":{},"body":{"index.html":{}}}],["installtemplating",{"_index":260,"title":{},"body":{"index.html":{}}}],["interface",{"_index":176,"title":{"interfaces/RenderDto.html":{},"interfaces/RenderResponse.html":{}},"body":{"interfaces/RenderDto.html":{},"interfaces/RenderResponse.html":{},"coverage.html":{}}}],["interfaces",{"_index":177,"title":{},"body":{"interfaces/RenderDto.html":{},"interfaces/RenderResponse.html":{},"overview.html":{}}}],["interpolate",{"_index":129,"title":{},"body":{"injectables/JsTLService.html":{}}}],["javascript",{"_index":263,"title":{},"body":{"index.html":{}}}],["jinja",{"_index":265,"title":{},"body":{"index.html":{}}}],["json",{"_index":230,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["jstl",{"_index":269,"title":{},"body":{"index.html":{}}}],["jstl/jstl.service",{"_index":54,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["jstlservice",{"_index":53,"title":{"injectables/JsTLService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/JsTLService.html":{},"coverage.html":{},"overview.html":{}}}],["key",{"_index":150,"title":{},"body":{"injectables/JsTLService.html":{},"index.html":{}}}],["languages",{"_index":261,"title":{},"body":{"index.html":{}}}],["literal",{"_index":191,"title":{},"body":{"injectables/TemplateService.html":{}}}],["literals",{"_index":264,"title":{},"body":{"index.html":{}}}],["logger",{"_index":157,"title":{},"body":{"injectables/PrismaService.html":{}}}],["logger(prismaservice.name",{"_index":166,"title":{},"body":{"injectables/PrismaService.html":{}}}],["manager",{"_index":257,"title":{},"body":{"index.html":{}}}],["match",{"_index":139,"title":{},"body":{"injectables/JsTLService.html":{}}}],["match.slice(2",{"_index":141,"title":{},"body":{"injectables/JsTLService.html":{}}}],["matching",{"_index":94,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuditService.html":{},"injectables/JsTLService.html":{},"injectables/PrismaService.html":{},"interfaces/RenderDto.html":{},"interfaces/RenderResponse.html":{},"injectables/TemplateService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["meta",{"_index":86,"title":{},"body":{"controllers/AppController.html":{},"interfaces/RenderDto.html":{},"interfaces/RenderResponse.html":{},"index.html":{}}}],["metadata",{"_index":234,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"injectables/TemplateService.html":{}}}],["migrate",{"_index":276,"title":{},"body":{"index.html":{}}}],["migrations",{"_index":271,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":243,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["module",{"_index":95,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":97,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["name",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"injectables/TemplateService.html":{}}}],["nested",{"_index":146,"title":{},"body":{"injectables/JsTLService.html":{}}}],["nestjs/common",{"_index":48,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuditService.html":{},"injectables/JsTLService.html":{},"injectables/PrismaService.html":{},"injectables/TemplateService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":224,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":225,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":227,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":165,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["notes",{"_index":288,"title":{},"body":{"index.html":{}}}],["number",{"_index":179,"title":{},"body":{"interfaces/RenderDto.html":{},"interfaces/RenderResponse.html":{},"injectables/TemplateService.html":{}}}],["number(id",{"_index":91,"title":{},"body":{"controllers/AppController.html":{}}}],["obj",{"_index":148,"title":{},"body":{"injectables/JsTLService.html":{}}}],["object",{"_index":147,"title":{},"body":{"injectables/JsTLService.html":{}}}],["onmoduleinit",{"_index":159,"title":{},"body":{"injectables/PrismaService.html":{}}}],["optional",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"interfaces/RenderResponse.html":{},"injectables/TemplateService.html":{}}}],["options",{"_index":281,"title":{},"body":{"index.html":{}}}],["orderby",{"_index":201,"title":{},"body":{"injectables/TemplateService.html":{}}}],["out",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["overview",{"_index":319,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":222,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":47,"title":{},"body":{"controllers/AppController.html":{}}}],["parameters",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"injectables/TemplateService.html":{}}}],["params",{"_index":193,"title":{},"body":{"injectables/TemplateService.html":{}}}],["path",{"_index":140,"title":{},"body":{"injectables/JsTLService.html":{},"index.html":{}}}],["path.split('.').reduce((res",{"_index":149,"title":{},"body":{"injectables/JsTLService.html":{}}}],["post",{"_index":18,"title":{},"body":{"controllers/AppController.html":{}}}],["post('/process",{"_index":38,"title":{},"body":{"controllers/AppController.html":{}}}],["prisma",{"_index":41,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/TemplateService.html":{},"dependencies.html":{},"index.html":{}}}],["prisma.service",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/TemplateService.html":{}}}],["prisma.templatecreateinput",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/TemplateService.html":{}}}],["prisma.templateorderbywithrelationinput",{"_index":202,"title":{},"body":{"injectables/TemplateService.html":{}}}],["prisma.templateupdateinput",{"_index":203,"title":{},"body":{"injectables/TemplateService.html":{}}}],["prisma.templatewhereinput",{"_index":200,"title":{},"body":{"injectables/TemplateService.html":{}}}],["prisma.templatewhereuniqueinput",{"_index":185,"title":{},"body":{"injectables/TemplateService.html":{}}}],["prisma/client",{"_index":44,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"interfaces/RenderDto.html":{},"interfaces/RenderResponse.html":{},"injectables/TemplateService.html":{},"dependencies.html":{}}}],["prismaclient",{"_index":156,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismaservice",{"_index":102,"title":{"injectables/PrismaService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"injectables/TemplateService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":60,"title":{},"body":{"controllers/AppController.html":{},"injectables/PrismaService.html":{}}}],["processed",{"_index":67,"title":{},"body":{"controllers/AppController.html":{},"interfaces/RenderDto.html":{},"interfaces/RenderResponse.html":{}}}],["promise",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/TemplateService.html":{}}}],["properties",{"_index":127,"title":{},"body":{"injectables/JsTLService.html":{},"injectables/PrismaService.html":{},"interfaces/RenderDto.html":{},"interfaces/RenderResponse.html":{}}}],["property",{"_index":145,"title":{},"body":{"injectables/JsTLService.html":{}}}],["providers",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["public",{"_index":289,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":61,"title":{},"body":{"controllers/AppController.html":{},"injectables/PrismaService.html":{}}}],["reflect",{"_index":233,"title":{},"body":{"dependencies.html":{}}}],["regex",{"_index":136,"title":{},"body":{"injectables/JsTLService.html":{}}}],["render",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"injectables/JsTLService.html":{}}}],["render(@body",{"_index":62,"title":{},"body":{"controllers/AppController.html":{}}}],["render(renderdto",{"_index":36,"title":{},"body":{"controllers/AppController.html":{}}}],["render(substitute",{"_index":252,"title":{},"body":{"index.html":{}}}],["renderdto",{"_index":37,"title":{"interfaces/RenderDto.html":{}},"body":{"controllers/AppController.html":{},"interfaces/RenderDto.html":{},"interfaces/RenderResponse.html":{},"coverage.html":{}}}],["renderdto.data",{"_index":76,"title":{},"body":{"controllers/AppController.html":{}}}],["renderdto.id",{"_index":66,"title":{},"body":{"controllers/AppController.html":{}}}],["renderresponse",{"_index":51,"title":{"interfaces/RenderResponse.html":{}},"body":{"controllers/AppController.html":{},"interfaces/RenderDto.html":{},"interfaces/RenderResponse.html":{},"coverage.html":{}}}],["res[key",{"_index":151,"title":{},"body":{"injectables/JsTLService.html":{}}}],["reset",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["results",{"_index":93,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuditService.html":{},"injectables/JsTLService.html":{},"injectables/PrismaService.html":{},"interfaces/RenderDto.html":{},"interfaces/RenderResponse.html":{},"injectables/TemplateService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":83,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/JsTLService.html":{},"injectables/TemplateService.html":{}}}],["returns",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"injectables/TemplateService.html":{}}}],["rimraf",{"_index":236,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":275,"title":{},"body":{"index.html":{}}}],["running",{"_index":270,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":238,"title":{},"body":{"dependencies.html":{}}}],["sampledata",{"_index":287,"title":{},"body":{"index.html":{}}}],["schema",{"_index":273,"title":{},"body":{"index.html":{}}}],["schema.prisma",{"_index":274,"title":{},"body":{"index.html":{}}}],["server",{"_index":307,"title":{},"body":{"index.html":{}}}],["service",{"_index":249,"title":{},"body":{"index.html":{}}}],["setup",{"_index":303,"title":{},"body":{"index.html":{}}}],["skip",{"_index":197,"title":{},"body":{"injectables/TemplateService.html":{}}}],["soon",{"_index":267,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuditService.html":{},"injectables/JsTLService.html":{},"injectables/PrismaService.html":{},"interfaces/RenderDto.html":{},"interfaces/RenderResponse.html":{},"injectables/TemplateService.html":{}}}],["spec",{"_index":279,"title":{},"body":{"index.html":{}}}],["specified",{"_index":144,"title":{},"body":{"injectables/JsTLService.html":{}}}],["src/.../main.ts",{"_index":245,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:18",{"_index":39,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:44",{"_index":20,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:51",{"_index":31,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:56",{"_index":35,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":114,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:10",{"_index":121,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:14",{"_index":120,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:7",{"_index":118,"title":{},"body":{"injectables/AppService.html":{}}}],["src/audit/audit.service.ts",{"_index":125,"title":{},"body":{"injectables/AuditService.html":{},"coverage.html":{}}}],["src/dto/render.ts",{"_index":178,"title":{},"body":{"interfaces/RenderDto.html":{},"interfaces/RenderResponse.html":{},"coverage.html":{}}}],["src/jstl/jstl.service.ts",{"_index":126,"title":{},"body":{"injectables/JsTLService.html":{},"coverage.html":{}}}],["src/jstl/jstl.service.ts:14",{"_index":131,"title":{},"body":{"injectables/JsTLService.html":{}}}],["src/jstl/jstl.service.ts:18",{"_index":133,"title":{},"body":{"injectables/JsTLService.html":{}}}],["src/jstl/jstl.service.ts:5",{"_index":132,"title":{},"body":{"injectables/JsTLService.html":{}}}],["src/main.ts",{"_index":216,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/prisma.service.ts",{"_index":154,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma.service.ts:12",{"_index":167,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma.service.ts:13",{"_index":164,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma.service.ts:18",{"_index":162,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/template/template.service.ts",{"_index":180,"title":{},"body":{"injectables/TemplateService.html":{},"coverage.html":{}}}],["src/template/template.service.ts:17",{"_index":192,"title":{},"body":{"injectables/TemplateService.html":{}}}],["src/template/template.service.ts:34",{"_index":183,"title":{},"body":{"injectables/TemplateService.html":{}}}],["src/template/template.service.ts:40",{"_index":195,"title":{},"body":{"injectables/TemplateService.html":{}}}],["src/template/template.service.ts:51",{"_index":186,"title":{},"body":{"injectables/TemplateService.html":{}}}],["src/template/template.service.ts:6",{"_index":182,"title":{},"body":{"injectables/TemplateService.html":{}}}],["src/template/template.service.ts:9",{"_index":188,"title":{},"body":{"injectables/TemplateService.html":{}}}],["start",{"_index":304,"title":{},"body":{"index.html":{}}}],["started",{"_index":247,"title":{"index.html":{}},"body":{}}],["statements",{"_index":209,"title":{},"body":{"coverage.html":{}}}],["string",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"injectables/JsTLService.html":{},"interfaces/RenderDto.html":{},"interfaces/RenderResponse.html":{}}}],["support",{"_index":316,"title":{},"body":{"modules.html":{}}}],["supported",{"_index":262,"title":{},"body":{"index.html":{}}}],["svg",{"_index":317,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":240,"title":{},"body":{"dependencies.html":{}}}],["switch",{"_index":68,"title":{},"body":{"controllers/AppController.html":{}}}],["table",{"_index":221,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":220,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":198,"title":{},"body":{"injectables/TemplateService.html":{}}}],["template",{"_index":42,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/JsTLService.html":{},"interfaces/RenderDto.html":{},"interfaces/RenderResponse.html":{},"injectables/TemplateService.html":{},"index.html":{}}}],["template(userwhereuniqueinput",{"_index":187,"title":{},"body":{"injectables/TemplateService.html":{}}}],["template.meta",{"_index":87,"title":{},"body":{"controllers/AppController.html":{}}}],["template.replace(regex",{"_index":138,"title":{},"body":{"injectables/JsTLService.html":{}}}],["template.type",{"_index":69,"title":{},"body":{"controllers/AppController.html":{}}}],["template/template.service",{"_index":56,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["templatedata",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["templaterdb",{"_index":312,"title":{},"body":{"index.html":{}}}],["templates",{"_index":79,"title":{},"body":{"controllers/AppController.html":{},"injectables/TemplateService.html":{},"index.html":{}}}],["templates(params",{"_index":190,"title":{},"body":{"injectables/TemplateService.html":{}}}],["templateservice",{"_index":55,"title":{"injectables/TemplateService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/TemplateService.html":{},"coverage.html":{},"overview.html":{}}}],["templatetext",{"_index":152,"title":{},"body":{"injectables/JsTLService.html":{}}}],["templatetype",{"_index":43,"title":{},"body":{"controllers/AppController.html":{},"interfaces/RenderDto.html":{},"interfaces/RenderResponse.html":{},"index.html":{}}}],["templatetype.jinja",{"_index":71,"title":{},"body":{"controllers/AppController.html":{}}}],["templatetype.js_template_literals",{"_index":74,"title":{},"body":{"controllers/AppController.html":{}}}],["test",{"_index":85,"title":{},"body":{"controllers/AppController.html":{}}}],["this.$connect",{"_index":169,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('beforeexit",{"_index":172,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.getobjpath(path",{"_index":143,"title":{},"body":{"injectables/JsTLService.html":{}}}],["this.interpolate(templatetext",{"_index":153,"title":{},"body":{"injectables/JsTLService.html":{}}}],["this.jstlservice.render(template.body",{"_index":75,"title":{},"body":{"controllers/AppController.html":{}}}],["this.logger.verbose('prisma",{"_index":170,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.logger.warn('prisma",{"_index":173,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.prisma.template.create",{"_index":124,"title":{},"body":{"injectables/AppService.html":{},"injectables/TemplateService.html":{}}}],["this.prisma.template.delete",{"_index":205,"title":{},"body":{"injectables/TemplateService.html":{}}}],["this.prisma.template.findmany",{"_index":123,"title":{},"body":{"injectables/AppService.html":{},"injectables/TemplateService.html":{}}}],["this.prisma.template.findunique",{"_index":196,"title":{},"body":{"injectables/TemplateService.html":{}}}],["this.prisma.template.update",{"_index":204,"title":{},"body":{"injectables/TemplateService.html":{}}}],["this.templateservice.createtemplate(templatedata",{"_index":88,"title":{},"body":{"controllers/AppController.html":{}}}],["this.templateservice.deletetemplate",{"_index":90,"title":{},"body":{"controllers/AppController.html":{}}}],["this.templateservice.template",{"_index":65,"title":{},"body":{"controllers/AppController.html":{}}}],["throw",{"_index":72,"title":{},"body":{"controllers/AppController.html":{}}}],["transformer",{"_index":278,"title":{},"body":{"index.html":{}}}],["transformer1",{"_index":298,"title":{},"body":{"index.html":{}}}],["transformer2",{"_index":300,"title":{},"body":{"index.html":{}}}],["transformers",{"_index":296,"title":{},"body":{"index.html":{}}}],["type",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"interfaces/RenderDto.html":{},"interfaces/RenderResponse.html":{},"injectables/TemplateService.html":{},"coverage.html":{},"index.html":{}}}],["types",{"_index":81,"title":{},"body":{"controllers/AppController.html":{}}}],["ui",{"_index":241,"title":{},"body":{"dependencies.html":{}}}],["up",{"_index":310,"title":{},"body":{"index.html":{}}}],["update",{"_index":272,"title":{},"body":{"index.html":{}}}],["updatetemplate",{"_index":181,"title":{},"body":{"injectables/TemplateService.html":{}}}],["updatetemplate(params",{"_index":194,"title":{},"body":{"injectables/TemplateService.html":{}}}],["use",{"_index":255,"title":{},"body":{"index.html":{}}}],["userwhereuniqueinput",{"_index":189,"title":{},"body":{"injectables/TemplateService.html":{}}}],["value",{"_index":130,"title":{},"body":{"injectables/JsTLService.html":{},"injectables/PrismaService.html":{},"index.html":{}}}],["variables",{"_index":134,"title":{},"body":{"injectables/JsTLService.html":{}}}],["without",{"_index":80,"title":{},"body":{"controllers/AppController.html":{}}}],["world",{"_index":302,"title":{},"body":{"index.html":{}}}],["yarn",{"_index":259,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addTemplate\n                            \n                            \n                                    Async\n                                deleteTemplate\n                            \n                            \n                                    Async\n                                getTemplate\n                            \n                            \n                                    Async\n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addTemplate\n                        \n                    \n                \n            \n            \n                \n                    \n                    addTemplate(templateData: Prisma.TemplateCreateInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    templateData\n                                    \n                                            Prisma.TemplateCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteTemplate\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteTemplate(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getTemplate\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTemplate(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        render\n                        \n                    \n                \n            \n            \n                \n                    \n                    render(renderDto: RenderDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/process')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    renderDto\n                                    \n                                                RenderDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Prisma, Template, TemplateType } from '.prisma/client';\nimport { Body, Controller, Delete, Get, Param, Post } from '@nestjs/common';\n\nimport { AppService } from './app.service';\nimport { RenderDto, RenderResponse } from './dto/render';\nimport { JsTLService } from './jstl/jstl.service';\nimport { TemplateService } from './template/template.service';\n\n@Controller()\nexport class AppController {\n  constructor(\n    private readonly appService: AppService,\n    private readonly templateService: TemplateService,\n    private readonly jstlService: JsTLService,\n  ) {}\n\n  @Post('/process')\n  async render(@Body() renderDto: RenderDto): Promise {\n    const template: Template = await this.templateService.template({\n      id: renderDto.id,\n    });\n    let processed;\n\n    switch (template.type) {\n      case TemplateType.JINJA:\n        throw 'Not implemented';\n\n      case TemplateType.JS_TEMPLATE_LITERALS:\n        processed = this.jstlService.render(template.body, renderDto.data);\n        break;\n      default:\n        throw 'Templates without template types not allowed';\n    }\n    return {\n      processed,\n      templateType: TemplateType.JS_TEMPLATE_LITERALS,\n      data: renderDto.data,\n      template: 'test',\n      meta: template.meta,\n    };\n  }\n\n  @Post('/')\n  async addTemplate(\n    @Body() templateData: Prisma.TemplateCreateInput,\n  ): Promise {\n    return this.templateService.createTemplate(templateData);\n  }\n\n  @Delete('/:id')\n  async deleteTemplate(@Param('id') id: string): Promise {\n    return this.templateService.deleteTemplate({ id: Number(id) });\n  }\n\n  @Get('/:id')\n  async getTemplate(@Param('id') id: string): Promise {\n    return this.templateService.template({ id: Number(id) });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppService\n\nAppService\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuditService\n\nAuditService\n\nAppModule -->\n\nAuditService->AppModule\n\n\n\n\n\nJsTLService\n\nJsTLService\n\nAppModule -->\n\nJsTLService->AppModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nAppModule -->\n\nPrismaService->AppModule\n\n\n\n\n\nTemplateService\n\nTemplateService\n\nAppModule -->\n\nTemplateService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            AuditService\n                        \n                        \n                            JsTLService\n                        \n                        \n                            PrismaService\n                        \n                        \n                            TemplateService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\nimport { JsTLService } from './jstl/jstl.service';\nimport { TemplateService } from './template/template.service';\nimport { AuditService } from './audit/audit.service';\n\n@Module({\n  imports: [],\n  controllers: [AppController],\n  providers: [AppService, PrismaService, JsTLService, TemplateService, AuditService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createTemplate\n                            \n                            \n                                    Async\n                                getAllTemplates\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/app.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createTemplate\n                        \n                    \n                \n            \n            \n                \n                    \n                    createTemplate(data: Prisma.TemplateCreateInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            Prisma.TemplateCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllTemplates\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllTemplates()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Prisma, Template } from '@prisma/client';\n\nimport { Injectable } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n\n@Injectable()\nexport class AppService {\n  constructor(private prisma: PrismaService) {}\n\n  async getAllTemplates(): Promise {\n    return this.prisma.template.findMany();\n  }\n\n  async createTemplate(data: Prisma.TemplateCreateInput): Promise {\n    return this.prisma.template.create({\n      data,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuditService.html":{"url":"injectables/AuditService.html","title":"injectable - AuditService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuditService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/audit/audit.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AuditService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JsTLService.html":{"url":"injectables/JsTLService.html","title":"injectable - JsTLService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JsTLService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jstl/jstl.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getObjPath\n                            \n                            \n                                interpolate\n                            \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        getObjPath\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/jstl/jstl.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        interpolate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/jstl/jstl.service.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        render\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/jstl/jstl.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class JsTLService {\n  interpolate = (template, variables, fallback) => {\n    const regex = /\\${[^{]+}/g;\n    return template.replace(regex, (match) => {\n      const path = match.slice(2, -1).trim();\n      return this.getObjPath(path, variables, fallback);\n    });\n  };\n\n  //get the specified property or nested property of an object\n  getObjPath = (path, obj, fallback = '') => {\n    return path.split('.').reduce((res, key) => res[key] || fallback, obj);\n  };\n\n  render = (templateText: string, data: any, fallback: string = '') => {\n    return this.interpolate(templateText, data, fallback);\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                    \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n            \n                \n                    Defined in src/prisma.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(PrismaService.name)\n                    \n                \n                    \n                        \n                                Defined in src/prisma.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  INestApplication,\n  Injectable,\n  Logger,\n  OnModuleInit,\n} from '@nestjs/common';\n\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  private readonly logger = new Logger(PrismaService.name);\n  async onModuleInit() {\n    await this.$connect();\n    this.logger.verbose('Prisma connected');\n  }\n\n  async enableShutdownHooks(app: INestApplication) {\n    this.$on('beforeExit', async () => {\n      this.logger.warn('Prisma existing');\n      await app.close();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RenderDto.html":{"url":"interfaces/RenderDto.html","title":"interface - RenderDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RenderDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/render.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TemplateType } from '.prisma/client';\n\nexport interface RenderDto {\n  id: number;\n  data: any;\n}\n\nexport interface RenderResponse {\n  processed: string;\n  templateType: TemplateType;\n  data: any;\n  template: string;\n  meta?: any;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RenderResponse.html":{"url":"interfaces/RenderResponse.html","title":"interface - RenderResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RenderResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/render.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            meta\n                                        \n                                \n                                \n                                        \n                                            processed\n                                        \n                                \n                                \n                                        \n                                            template\n                                        \n                                \n                                \n                                        \n                                            templateType\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        meta\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        meta:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        processed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        processed:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        template\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        template:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        templateType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        templateType:     TemplateType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TemplateType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TemplateType } from '.prisma/client';\n\nexport interface RenderDto {\n  id: number;\n  data: any;\n}\n\nexport interface RenderResponse {\n  processed: string;\n  templateType: TemplateType;\n  data: any;\n  template: string;\n  meta?: any;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TemplateService.html":{"url":"injectables/TemplateService.html","title":"injectable - TemplateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TemplateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/template/template.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createTemplate\n                            \n                            \n                                    Async\n                                deleteTemplate\n                            \n                            \n                                    Async\n                                template\n                            \n                            \n                                    Async\n                                templates\n                            \n                            \n                                    Async\n                                updateTemplate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/template/template.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createTemplate\n                        \n                    \n                \n            \n            \n                \n                    \n                    createTemplate(data: Prisma.TemplateCreateInput)\n                \n            \n\n\n            \n                \n                    Defined in src/template/template.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            Prisma.TemplateCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteTemplate\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteTemplate(where: Prisma.TemplateWhereUniqueInput)\n                \n            \n\n\n            \n                \n                    Defined in src/template/template.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    where\n                                    \n                                            Prisma.TemplateWhereUniqueInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        template\n                        \n                    \n                \n            \n            \n                \n                    \n                    template(userWhereUniqueInput: Prisma.TemplateWhereUniqueInput)\n                \n            \n\n\n            \n                \n                    Defined in src/template/template.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userWhereUniqueInput\n                                    \n                                            Prisma.TemplateWhereUniqueInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        templates\n                        \n                    \n                \n            \n            \n                \n                    \n                    templates(params: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/template/template.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateTemplate\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateTemplate(params: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/template/template.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Template, Prisma } from '@prisma/client';\nimport { PrismaService } from '../prisma.service';\n\n@Injectable()\nexport class TemplateService {\n  constructor(private prisma: PrismaService) {}\n\n  async template(\n    userWhereUniqueInput: Prisma.TemplateWhereUniqueInput,\n  ): Promise {\n    return this.prisma.template.findUnique({\n      where: userWhereUniqueInput,\n    });\n  }\n\n  async templates(params: {\n    skip?: number;\n    take?: number;\n    cursor?: Prisma.TemplateWhereUniqueInput;\n    where?: Prisma.TemplateWhereInput;\n    orderBy?: Prisma.TemplateOrderByWithRelationInput;\n  }): Promise {\n    const { skip, take, cursor, where, orderBy } = params;\n    return this.prisma.template.findMany({\n      skip,\n      take,\n      cursor,\n      where,\n      orderBy,\n    });\n  }\n\n  async createTemplate(data: Prisma.TemplateCreateInput): Promise {\n    return this.prisma.template.create({\n      data,\n    });\n  }\n\n  async updateTemplate(params: {\n    where: Prisma.TemplateWhereUniqueInput;\n    data: Prisma.TemplateUpdateInput;\n  }): Promise {\n    const { where, data } = params;\n    return this.prisma.template.update({\n      data,\n      where,\n    });\n  }\n\n  async deleteTemplate(\n    where: Prisma.TemplateWhereUniqueInput,\n  ): Promise {\n    return this.prisma.template.delete({\n      where,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/audit/audit.service.ts\n            \n            injectable\n            AuditService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/dto/render.ts\n            \n            interface\n            RenderDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/dto/render.ts\n            \n            interface\n            RenderResponse\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/jstl/jstl.service.ts\n            \n            injectable\n            JsTLService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/template/template.service.ts\n            \n            injectable\n            TemplateService\n            \n                0 %\n                (0/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/swagger : ^5.1.5\n        \n            @prisma/client : 3.5.0\n        \n            json-bigint : ^1.0.0\n        \n            prisma : 3.5.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.1.6\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nDescription\nTemplates as a service.\n\nAPIs to CRUD Templates\nRender(substitute) data in a template.\n\nFeel free to use this as a config manager.\nInstallation\n$ yarn installTemplating languages supported\n\nJavascript Literals + JSON\nJinja (Coming Soon)\n\nAbbreviations\n\nJSTL = Javascript Template Literals.\n\nRunning Migrations\n\nUpdate the schema in schema.prisma.\nRun prisma migrate dev\n\nTransformer Spec\n{\n    path: \"data.username\",\n    type: \"options\", //enum => options, function\n    meta: {\n        options: [\n            {\n                key: 1,\n                value: \"cloudfunctions.googleapis.com\"\n            },\n            {\n                key: 2,\n                value: \"cloudbuild.googleapis.com\"\n            }\n        ]\n    },\n    sampleData: {}\n}Notes\nPublic API Docs for Commenting\n{\n  \"data\": {\n    \"field1\": \"f1\",\n    \"field1\": \"f2\"\n  },\n  \"transformers\": [\n    {\n      \"path\": \"data.field1\",\n      \"transformer\": \"transformer1\"\n    },\n    {\n      \"path\": \"data.field2\",\n      \"transformer\": \"transformer2\"\n    }\n  ],\n  \"meta\": {},\n  \"body: \"Hello World\",\n  \"templateType\": \"JSTL\",\n}Dev Setup\n\nStart the database and gql server - docker-compose up -d templaterdb gql\nMigrate -prisma migrate dev\nGenerating docs when you are done? -\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppService\n\nAppService\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuditService\n\nAuditService\n\nAppModule -->\n\nAuditService->AppModule\n\n\n\n\n\nJsTLService\n\nJsTLService\n\nAppModule -->\n\nJsTLService->AppModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nAppModule -->\n\nPrismaService->AppModule\n\n\n\n\n\nTemplateService\n\nTemplateService\n\nAppModule -->\n\nTemplateService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Controller\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
